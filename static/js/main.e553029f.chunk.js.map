{"version":3,"sources":["algorithms/MergeSort.js","algorithms/QuickSort.js","algorithms/InsertionSort.js","algorithms/SelectionSort.js","algorithms/BubbleSort.js","components/SortingVisualizer.js","App.js","index.js"],"names":["mergeSort","auxillaryArray","startIndex","endIndex","animations","middleIndex","Math","floor","merge","sortArray","i","j","push","arraysAreEqual","firstArray","secondArray","length","quickSort","pivotIndex","partitionArray","randomIntFromInterval","swap","lessTailIndex","firstIndex","secondIndex","temp","min","max","random","insertionSort","N","key","selectionSort","minIndex","bubbleSort","iters","swapped","WINDOW_HEIGHT","window","innerHeight","PRIMARY_COLOR","SECONDARY_COLOR","DISABLED_BUTTON","ENABLED_BUTTON","SortingVisualizer","props","useState","array","setArray","useEffect","resetArray","restoreStoreButtons","disableSortButtons","document","getElementById","disabled","buttonStyle","style","title","cursor","backgroundColor","background","slice","javaScriptSortedArray","sort","a","b","console","log","getMergeSortAnimations","isColorChange","arrayBars","getElementsByClassName","barOneIndex","barTwoIndex","color","barOneStyle","barTwoStyle","setTimeout","barOneIdx","newHeight","height","RESTORE_TIME","parseInt","getQuickSortAnimations","barIndex","barStyle","getBubbleSortAnimations","getInsertionSortAnimations","getSelectionSortAnimations","className","id","onClick","map","value","idx","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e553029f.chunk.js","sourcesContent":["export const getMergeSortAnimations = (array) => {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  mergeSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n  array = auxillaryArray;\n  return [animations, array];\n};\n\nconst mergeSort = (auxillaryArray, startIndex, endIndex, animations) => {\n  if (startIndex === endIndex) return;\n  const middleIndex = Math.floor((startIndex + endIndex) / 2);\n  mergeSort(auxillaryArray, startIndex, middleIndex, animations);\n  mergeSort(auxillaryArray, middleIndex + 1, endIndex, animations);\n  merge(auxillaryArray, startIndex, middleIndex, endIndex, animations);\n};\n\nconst merge = (\n  auxillaryArray,\n  startIndex,\n  middleIndex,\n  endIndex,\n  animations\n) => {\n  let sortArray = [];\n  let i = startIndex;\n  let j = middleIndex + 1;\n  while (i <= middleIndex && j <= endIndex) {\n    animations.push([\"comparision1\", i, j]);\n    animations.push([\"comparision2\", i, j]);\n    if (auxillaryArray[i] <= auxillaryArray[j]) {\n      sortArray.push(auxillaryArray[i++]);\n    } else {\n      sortArray.push(auxillaryArray[j++]);\n    }\n  }\n  while (i <= middleIndex) {\n    animations.push([\"comparision1\", i, i]);\n    animations.push([\"comparision2\", i, i]);\n    sortArray.push(auxillaryArray[i++]);\n  }\n  while (j <= endIndex) {\n    animations.push([\"comparision1\", j, j]);\n    animations.push([\"comparision2\", j, j]);\n    sortArray.push(auxillaryArray[j++]);\n  }\n  for (let i = startIndex; i <= endIndex; i++) {\n    animations.push([\"comparision1\", i, i - startIndex]);\n    animations.push([\"overwrite\", i, sortArray[i - startIndex]]);\n    animations.push([\"comparision2\", i, i - startIndex]);\n    auxillaryArray[i] = sortArray[i - startIndex];\n  }\n};\n\nconst arraysAreEqual = (firstArray, secondArray) => {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n","export const getQuickSortAnimations = (array) => {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return [animations, array];\n};\n\nconst quickSort = (auxillaryArray, startIndex, endIndex, animations) => {\n  let pivotIndex;\n  if (startIndex < endIndex) {\n    pivotIndex = partitionArray(\n      auxillaryArray,\n      startIndex,\n      endIndex,\n      animations\n    );\n    quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n    quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n  }\n};\n\nconst partitionArray = (auxillaryArray, startIndex, endIndex, animations) => {\n  let pivotIndex = randomIntFromInterval(startIndex, endIndex);\n\n  animations.push([\"comparision1\", pivotIndex, endIndex]);\n  animations.push([\"swap\", pivotIndex, auxillaryArray[endIndex]]);\n  animations.push([\"swap\", endIndex, auxillaryArray[pivotIndex]]);\n  animations.push([\"comparision2\", pivotIndex, endIndex]);\n  swap(auxillaryArray, pivotIndex, endIndex);\n\n  let lessTailIndex = startIndex;\n\n  for (let i = startIndex; i < endIndex; ++i) {\n    animations.push([\"comparision1\", i, endIndex]);\n    animations.push([\"comparision2\", i, endIndex]);\n    if (auxillaryArray[i] <= auxillaryArray[endIndex]) {\n      animations.push([\"comparision1\", i, lessTailIndex]);\n      animations.push([\"swap\", i, auxillaryArray[lessTailIndex]]);\n      animations.push([\"swap\", lessTailIndex, auxillaryArray[i]]);\n      animations.push([\"comparision2\", i, lessTailIndex]);\n      swap(auxillaryArray, i, lessTailIndex);\n      lessTailIndex++;\n    }\n  }\n  animations.push([\"comparision1\", lessTailIndex, endIndex]);\n  animations.push([\"swap\", endIndex, auxillaryArray[lessTailIndex]]);\n  animations.push([\"swap\", lessTailIndex, auxillaryArray[endIndex]]);\n  animations.push([\"comparision2\", lessTailIndex, endIndex]);\n\n  swap(auxillaryArray, lessTailIndex, endIndex);\n  return lessTailIndex;\n\n  // let pivot = auxillaryArray[endIndex];\n  // let pivotIndex = startIndex;\n  // for (let i = startIndex; i <= endIndex - 1; i++) {\n  //     animations.push([i, endIndex]);\n  //     animations.push([i, endIndex]);\n  //     if (auxillaryArray[i] <= pivot) {\n  //         //Swap these two heights\n  //         animations.push([i, auxillaryArray[pivotIndex]]);\n  //         animations.push([pivotIndex, auxillaryArray[i]]);\n  //         swap(auxillaryArray, i , pivotIndex);\n  //         pivotIndex++;\n  //     }\n  //     else {\n  //         animations.push([-1, -1]);\n  //         animations.push([-1, -1]);\n  //     }\n  //     animations.push([-1, -1]);\n  //     animations.push([-1, -1]);\n  // }\n  // animations.push([-1, -1]);\n  // animations.push([-1, -1]);\n  // animations.push([-1, -1]);\n  // animations.push([-1, -1]);\n  // //Swap these two heights\n  // animations.push([pivotIndex, auxillaryArray[endIndex]]);\n  // animations.push([endIndex, auxillaryArray[pivotIndex]]);\n  // swap(auxillaryArray, pivotIndex, endIndex);\n  // return pivotIndex;\n};\n\nconst swap = (auxillaryArray, firstIndex, secondIndex) => {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n};\n\nconst arraysAreEqual = (firstArray, secondArray) => {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","export const getInsertionSortAnimations = (array) => {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  insertionSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return [animations, array];\n};\n\nconst insertionSort = (auxillaryArray, animations) => {\n  const N = auxillaryArray.length;\n  for (let i = 1; i < N; i++) {\n    let key = auxillaryArray[i];\n    let j = i - 1;\n    animations.push([\"comparision1\", j, i]);\n    animations.push([\"comparision2\", j, i]);\n    while (j >= 0 && auxillaryArray[j] > key) {\n      animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n      auxillaryArray[j + 1] = auxillaryArray[j];\n      j = j - 1;\n      if (j >= 0) {\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n      }\n    }\n    animations.push([\"overwrite\", j + 1, key]);\n    auxillaryArray[j + 1] = key;\n  }\n};\n\nconst arraysAreEqual = (firstArray, secondArray) => {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n","export const getSelectionSortAnimations = (array) => {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  selectionSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return [animations, array];\n};\n\nconst selectionSort = (auxillaryArray, animations) => {\n  const N = auxillaryArray.length;\n  for (let i = 0; i < N - 1; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < N; j++) {\n      animations.push([\"comparision1\", j, minIndex]);\n      animations.push([\"comparision2\", j, minIndex]);\n      if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n        minIndex = j;\n      }\n    }\n    animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n    animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n\n    swap(auxillaryArray, minIndex, i);\n  }\n};\n\nconst swap = (auxillaryArray, firstIndex, secondIndex) => {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n};\n\nconst arraysAreEqual = (firstArray, secondArray) => {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n","export const getBubbleSortAnimations = (array) => {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  bubbleSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return [animations, array];\n};\n\nconst bubbleSort = (auxillaryArray, animations) => {\n  const N = auxillaryArray.length;\n  let iters = N - 1;\n  while (iters > 0) {\n    let swapped = false;\n    for (let i = 0; i < iters; ++i) {\n      animations.push([\"comparision1\", i, i + 1]);\n      animations.push([\"comparision2\", i, i + 1]);\n      if (auxillaryArray[i] > auxillaryArray[i + 1]) {\n        swapped = true;\n        animations.push([\"swap\", i, auxillaryArray[i + 1]]);\n        animations.push([\"swap\", i + 1, auxillaryArray[i]]);\n        swap(auxillaryArray, i, i + 1);\n      }\n    }\n    if (swapped === false) break;\n    iters--;\n  }\n};\n\nconst swap = (auxillaryArray, firstIndex, secondIndex) => {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n};\n\nconst arraysAreEqual = (firstArray, secondArray) => {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { useEffect, useState } from \"react\";\nimport \"../styles/SortingVisualizer.css\";\nimport { getMergeSortAnimations } from \"../algorithms/MergeSort\";\nimport { getQuickSortAnimations } from \"../algorithms/QuickSort\";\nimport { getInsertionSortAnimations } from \"../algorithms/InsertionSort\";\nimport { getSelectionSortAnimations } from \"../algorithms/SelectionSort\";\nimport { getBubbleSortAnimations } from \"../algorithms/BubbleSort\";\n\nlet WINDOW_HEIGHT = window.innerHeight;\nlet NUMBER_OF_ARRAY_BARS = 58;\n\nconst PRIMARY_COLOR = \"turquoise\";\nconst SECONDARY_COLOR = \"red\";\nconst ANIMATION_SPEED_MS = 5;\n\nconst DISABLED_BUTTON = \"Currently Disabled\";\nconst ENABLED_BUTTON = {\n  nlogn: \"O(NlogN) Time Complexity\",\n  nSquare: \"O(N^2) Time Complexity\",\n};\n\nconst SortingVisualizer = (props) => {\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(25, WINDOW_HEIGHT - 30));\n    }\n    setArray(array);\n    restoreStoreButtons();\n  };\n\n  const disableSortButtons = () => {\n    document.getElementById(\"generate\").disabled = true;\n    let buttonStyle = document.getElementById(\"generate\").style;\n    document.getElementById(\"generate\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.backgroundColor = \"#000000\";\n\n    document.getElementById(\"mergeSort\").disabled = true;\n    buttonStyle = document.getElementById(\"mergeSort\").style;\n    document.getElementById(\"mergeSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"quickSort\").disabled = true;\n    buttonStyle = document.getElementById(\"quickSort\").style;\n    document.getElementById(\"quickSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"insertionSort\").disabled = true;\n    buttonStyle = document.getElementById(\"insertionSort\").style;\n    document.getElementById(\"insertionSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"selectionSort\").disabled = true;\n    buttonStyle = document.getElementById(\"selectionSort\").style;\n    document.getElementById(\"selectionSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n\n    document.getElementById(\"bubbleSort\").disabled = true;\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\n    document.getElementById(\"bubbleSort\").title = DISABLED_BUTTON;\n    buttonStyle.cursor = \"default\";\n    buttonStyle.background = \"#000000\";\n  };\n\n  const restoreStoreButtons = () => {\n    document.getElementById(\"generate\").disabled = false;\n    let buttonStyle = document.getElementById(\"generate\").style;\n    document.getElementById(\"generate\").title = ENABLED_BUTTON.nlogn;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"mergeSort\").disabled = false;\n    buttonStyle = document.getElementById(\"mergeSort\").style;\n    document.getElementById(\"mergeSort\").title = ENABLED_BUTTON.nlogn;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"quickSort\").disabled = false;\n    buttonStyle = document.getElementById(\"quickSort\").style;\n    document.getElementById(\"quickSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"bubbleSort\").disabled = false;\n    buttonStyle = document.getElementById(\"bubbleSort\").style;\n    document.getElementById(\"bubbleSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"selectionSort\").disabled = false;\n    buttonStyle = document.getElementById(\"selectionSort\").style;\n    document.getElementById(\"selectionSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n\n    document.getElementById(\"insertionSort\").disabled = false;\n    buttonStyle = document.getElementById(\"insertionSort\").style;\n    document.getElementById(\"insertionSort\").title = ENABLED_BUTTON.nSquare;\n    buttonStyle.background = \"#47535E\";\n    buttonStyle.cursor = \"pointer\";\n  };\n\n  const mergeSort = () => {\n    disableSortButtons();\n    const [animations, sortArray] = getMergeSortAnimations(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] == \"comparision1\" ||\n        animations[i][0] == \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const [comparision, barOneIndex, barTwoIndex] = animations[i];\n        const color =\n          animations[i][0] == \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [overwrite, barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n    setTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n  };\n\n  const quickSort = () => {\n    disableSortButtons();\n    const [animations, sortArray] = getQuickSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] == \"comparision1\" ||\n        animations[i][0] == \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] == \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [comparision, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [swap, barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n\n    setTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n  };\n\n  const bubbleSort = () => {\n    disableSortButtons();\n    const [animations, sortArray] = getBubbleSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] == \"comparision1\" ||\n        animations[i][0] == \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] == \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [comparision, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [swap, barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n\n    setTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n  };\n\n  const insertionSort = () => {\n    disableSortButtons();\n    const [animations, sortArray] = getInsertionSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n\n    setTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n  };\n\n  const selectionSort = () => {\n    disableSortButtons();\n    const [animations, sortArray] = getSelectionSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n\n    const RESTORE_TIME = parseInt(\n      (ANIMATION_SPEED_MS * animations.length) / 2 + 3000\n    );\n\n    setTimeout(() => restoreStoreButtons(), RESTORE_TIME);\n  };\n\n  return (\n    <section>\n      <nav className=\"buttons\">\n        <button\n          title=\"Generates a new random array\"\n          id=\"generate\"\n          onClick={() => resetArray()}\n        >\n          Generate New Array\n        </button>\n        <button\n          title=\"O(NlogN) Time Complexity\"\n          id=\"mergeSort\"\n          onClick={() => mergeSort()}\n        >\n          Merge Sort\n        </button>\n        <button\n          title=\"O(N^2) Time Complexity\"\n          id=\"quickSort\"\n          onClick={() => quickSort()}\n        >\n          Quick Sort\n        </button>\n        <button\n          title=\"O(N^2) Time Complexity\"\n          id=\"bubbleSort\"\n          onClick={() => bubbleSort()}\n        >\n          Bubble Sort\n        </button>\n        <button\n          title=\"O(N^2) Time Complexity\"\n          id=\"insertionSort\"\n          onClick={() => insertionSort()}\n        >\n          Insertion Sort\n        </button>\n        <button\n          title=\"O(N^2) Time Complexity\"\n          id=\"selectionSort\"\n          onClick={() => selectionSort()}\n        >\n          Selection Sort\n        </button>\n      </nav>\n      <div className=\"array-container\">\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{\n              height: `${value}px`,\n            }}\n          ></div>\n        ))}\n      </div>\n    </section>\n  );\n};\n// }\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default SortingVisualizer;\n","import Sortingvisualizer from \"./components/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sortingvisualizer></Sortingvisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}